name: .NET CI Pipeline

on:
  push:
    branches:
      - main
      - develop
      - feature/*
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore CriarContatos.Api.sln

      - name: Build
        run: dotnet build CriarContatos.Api.sln --configuration Release

      - name: Start RabbitMQ
        run: |
          docker run -d --name rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:3-management
          for i in {1..10}; do
            if curl -f http://localhost:15672 > /dev/null 2>&1; then
              echo "RabbitMQ is ready"
              exit 0
            fi
            echo "Waiting for RabbitMQ to start... Attempt $i of 10"
            sleep 5
          done
          echo "RabbitMQ failed to start"
          exit 1

      - name: Verify RabbitMQ
        run: curl -f http://localhost:15672 || exit 1

      # ðŸ”¥ Sobrescreve o appsettings.json na esteira
      - name: Override appsettings.json
        run: |
          cat > CriarContatos.Api/appsettings.json <<EOL
          {
            "RabbitMq": {
              "Host": "localhost",
              "Username": "admin",
              "Password": "admin123"
            },
            "ConnectionStrings": {
              "DefaultConnection": "Server=localhost;Database=MeuBanco;User Id=sa;Password=SenhaForte123;"
            }
          }
          EOL

      # ðŸ”¥ Define variÃ¡veis de ambiente para sobrescrever configuraÃ§Ãµes
      - name: Override appsettings.json
        run: |
          cat > CriarContatos.Api/appsettings.Development.json <<EOL
          {
            "RabbitMq": {
              "Host": "localhost",
              "Username": "guest",
              "Password": "guest"
            }
          }
          EOL

      - name: Start API in Background
        env:
          ASPNETCORE_URLS: http://localhost:5102
        run: |
          cd CriarContatos.Api/bin/Release/net8.0/
          dotnet CriarContatos.Api.dll &
          for i in {1..10}; do
            if curl -f http://localhost:5102/health > /dev/null 2>&1; then
              echo "API started successfully"
              exit 0
            fi
            echo "Waiting for API to start... Attempt $i of 10"
            sleep 3
          done
          echo "API failed to start after 10 attempts"
          exit 1

      - name: Run Unit Tests
        run: dotnet test CriarContatos.Test/CriarContatos.Test.csproj --configuration Release --logger "trx;LogFileName=TestResults/unit-test-results.trx" --results-directory CriarContatos.Test/TestResults

      - name: Cleanup
        if: always()
        run: |
          docker rm -f rabbitmq || true
          docker volume prune -f
