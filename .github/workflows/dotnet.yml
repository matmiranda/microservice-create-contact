name: .NET CI Pipeline

on:
  push:
    branches:
      - main
      - develop # Permite rodar a pipeline na develop
      - feature/* # Permite rodar em qualquer branch feature
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore Producer/CreateContactMicroservice/CriarContatos.Api.sln

    - name: Clean build directories
      run: dotnet clean Producer/CreateContactMicroservice/CriarContatos.Api.sln

    # - name: Fix permissions for output directories
    #   run: sudo chmod -R 777 $(System.DefaultWorkingDirectory)/Producer/CreateContactMicroservice/CriarContatos.Api/bin

    - name: Build
      run: dotnet build Producer/CreateContactMicroservice/CriarContatos.Api.sln --no-restore --output ./output

    - name: Publish Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          Producer/CreateContactMicroservice/CriarContatos.Test/bin/Debug/net8.0/
          Producer/CreateContactMicroservice/CriarContatos.Api/bin/Debug/net8.0/

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Download Build Artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: Producer/CreateContactMicroservice/

    - name: Run all tests
      run: dotnet test Producer/CreateContactMicroservice/CriarContatos.Api.sln --no-build --verbosity normal --logger "trx;LogFileName=TestResults/test-results.trx"

    - name: List Test Results
      run: |
        echo "Verificando conteúdo do diretório TestResults:"
        ls Producer/CreateContactMicroservice/CriarContatos.Test/TestResults

    - name: Publish Test Results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: Producer/CreateContactMicroservice/CriarContatos.Test/TestResults

  setup-monitoring:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Setup Prometheus
      run: docker run -d --name prometheus -p 9090:9090 prom/prometheus

    - name: Setup Grafana
      run: docker run -d --name grafana -p 3000:3000 grafana/grafana

    - name: Wait for Grafana to start 
      run: |
        for i in {1..10}; do
          if curl -L -f http://localhost:3000 > /dev/null; then
            echo "Grafana started"
            exit 0
          fi
          echo "Waiting for Grafana..."
          sleep 3
        done
        echo "Grafana failed to start"
        exit 1

    - name: Verify Prometheus 
      run: curl -f http://localhost:9090/metrics || exit 1

    - name: Verify Grafana
      run: curl -L -f http://localhost:3000 > /dev/null || exit 1

    - name: Grafana Error Logs
      if: failure()
      run: docker logs grafana
